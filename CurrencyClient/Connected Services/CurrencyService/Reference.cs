//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CurrencyClient.CurrencyService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencyRequest", Namespace="http://schemas.datacontract.org/2004/07/CurrencySOAP")]
    [System.SerializableAttribute()]
    public partial class CurrencyRequest : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string destinationCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string originCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string originValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string destinationCurrency {
            get {
                return this.destinationCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.destinationCurrencyField, value) != true)) {
                    this.destinationCurrencyField = value;
                    this.RaisePropertyChanged("destinationCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string originCurrency {
            get {
                return this.originCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.originCurrencyField, value) != true)) {
                    this.originCurrencyField = value;
                    this.RaisePropertyChanged("originCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string originValue {
            get {
                return this.originValueField;
            }
            set {
                if ((object.ReferenceEquals(this.originValueField, value) != true)) {
                    this.originValueField = value;
                    this.RaisePropertyChanged("originValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencyResponse", Namespace="http://schemas.datacontract.org/2004/07/CurrencySOAP")]
    [System.SerializableAttribute()]
    public partial class CurrencyResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string destinationCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string destinationValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string destinationCurrency {
            get {
                return this.destinationCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.destinationCurrencyField, value) != true)) {
                    this.destinationCurrencyField = value;
                    this.RaisePropertyChanged("destinationCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string destinationValue {
            get {
                return this.destinationValueField;
            }
            set {
                if ((object.ReferenceEquals(this.destinationValueField, value) != true)) {
                    this.destinationValueField = value;
                    this.RaisePropertyChanged("destinationValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CurrencyService.ICurrency")]
    public interface ICurrency {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrency/ConvertCurrency", ReplyAction="http://tempuri.org/ICurrency/ConvertCurrencyResponse")]
        CurrencyClient.CurrencyService.CurrencyResponse ConvertCurrency(CurrencyClient.CurrencyService.CurrencyRequest composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrency/ConvertCurrency", ReplyAction="http://tempuri.org/ICurrency/ConvertCurrencyResponse")]
        System.Threading.Tasks.Task<CurrencyClient.CurrencyService.CurrencyResponse> ConvertCurrencyAsync(CurrencyClient.CurrencyService.CurrencyRequest composite);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICurrencyChannel : CurrencyClient.CurrencyService.ICurrency, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CurrencyClient : System.ServiceModel.ClientBase<CurrencyClient.CurrencyService.ICurrency>, CurrencyClient.CurrencyService.ICurrency {
        
        public CurrencyClient() {
        }
        
        public CurrencyClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CurrencyClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CurrencyClient.CurrencyService.CurrencyResponse ConvertCurrency(CurrencyClient.CurrencyService.CurrencyRequest composite) {
            return base.Channel.ConvertCurrency(composite);
        }
        
        public System.Threading.Tasks.Task<CurrencyClient.CurrencyService.CurrencyResponse> ConvertCurrencyAsync(CurrencyClient.CurrencyService.CurrencyRequest composite) {
            return base.Channel.ConvertCurrencyAsync(composite);
        }
    }
}
